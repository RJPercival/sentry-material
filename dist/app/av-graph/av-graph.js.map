{"version":3,"file":"av-graph.js","sourceRoot":"","sources":["av-graph.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuC,eAAe,CAAC,CAAA;AACvD,uBAAwD,iBAAiB,CAAC,CAAA;AAC1E,4BAA2B,4BAA4B,CAAC,CAAA;AACxD,2BAA+B,uBAAuB,CAAC,CAAA;AAWvD;IAYE,2BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QALnC,qBAAgB,GAAO;YAC5B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;SACjB,CAAC;QAIK,qBAAgB,GAAc;YACnC;gBACE,eAAe,EAAE,eAAe;gBAChC,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,SAAS;gBAC/B,gBAAgB,EAAE,SAAS;gBAC3B,yBAAyB,EAAE,SAAS;gBACpC,qBAAqB,EAAE,uBAAuB;gBAC9C,gBAAgB,EAAE,OAAO;aAC1B;SACF,CAAC;QACK,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;IAdO,CAAC;IAgB7C,SAAS;IACF,wCAAY,GAAnB,UAAoB,CAAK;QACvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAEM,wCAAY,GAAnB,UAAoB,CAAK;QACvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE;aACtC,IAAI,CAAC,UAAA,MAAM;YACV,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACjC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAC7C,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IA1CC;QAAC,YAAK,EAAE;;kDAAA;IAVZ;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,8BAA8B;YAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;YAC1C,UAAU,EAAE,CAAC,6BAAgB,EAAE,gBAAO,EAAE,wBAAe,EAAE,wBAAe,CAAC;YACzE,SAAS,EAAE,CAAC,wBAAU,CAAC;YACvB,MAAM,EAAC,CAAC,KAAK,CAAC;SACf,CAAC;;yBAAA;IA8CF,wBAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,yBAAiB,oBA6C7B,CAAA","sourcesContent":["import {Component, OnInit, Input} from '@angular/core';\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES, NgClass} from '@angular/common';\nimport { LogService } from '../log.service/log.service';\nimport {CHART_DIRECTIVES} from 'ng2-charts/ng2-charts';\nimport { Log } from '../log/log';\n\n@Component({\n  selector: 'av-graph',\n  templateUrl: './app/av-graph/av-graph.html',\n  styleUrls: ['./app/av-graph/av-graph.css'],\n  directives: [CHART_DIRECTIVES, NgClass, CORE_DIRECTIVES, FORM_DIRECTIVES],\n  providers: [LogService],\n  inputs:['log']\n})\nexport class AvailibilityGraph implements OnInit{\n\n    @Input() log;\n\n  // lineChart\n  public lineChartData;\n  public lineChartLabels;\n  public lineChartOptions:any = {\n    animation: false,\n    responsive: true\n  };\n  public graph;\n  constructor(private logService: LogService){}\n\n  public lineChartColours:Array<any> = [\n    {\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderColor: '#13dcba',\n      pointBackgroundColor: '#f7fd44',\n      pointBorderColor: '#13dcba',\n      pointHoverBackgroundColor: '#13dcba',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n      defaultFontColor: 'white'\n    }\n  ];\n  public lineChartLegend:boolean = true;\n  public lineChartType:string = 'line';\n\n  // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n\n  public chartHovered(e:any):void {\n    console.log(e);\n  }\n\n  ngOnInit() {\n    this.logService.getAvailibilityGraphs()\n    .then(graphs => {\n      this.graph = graphs[this.log.id];\n      this.lineChartData = this.graph.availibility;\n      this.lineChartLabels = this.graph.time;\n    });\n  }\n}\n"]}