{"version":3,"file":"dashboard.component.js","sourceRoot":"","sources":["dashboard.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,kCAAuB,4BAA4B,CAAC,CAAA;AAEpD,oBAAoB,YAAY,CAAC,CAAA;AACjC,4BAA2B,4BAA4B,CAAC,CAAA;AAExD,sBAAsB;AACtB,qBAAiC,yBAAyB,CAAC,CAAA;AAC3D,uBAAqC,2BAA2B,CAAC,CAAA;AACjE,qBAAqC,yBAAyB,CAAC,CAAA;AAW/D;IAGE,4BAAoB,MAAc,EAAU,UAAsB;QAA9C,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAY;QAFlE,SAAI,GAAU,EAAE,CAAC;QACjB,iBAAY,GAAU,EAAE,CAAC;IAC6C,CAAC;IACvE,qCAAQ,GAAR,UAAS,GAAQ;QACf,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD,4CAAe,GAAf,UAAgB,CAAC,EAAE,CAAC;QAClB,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1B,MAAM,CAAC,CAAC,CAAC,CAAC;QACZ,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1B,MAAM,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAED,qCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;aACtB,IAAI,CAAC,UAAA,IAAI;YACR,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC/C,GAAG,CAAC,CAAY,UAAiB,EAAjB,KAAA,KAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,CAAC;gBAA7B,IAAI,GAAG,SAAA;gBACV,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,SAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAC9B;YACD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,uCAAU,GAAV,UAAW,GAAQ;QACjB,IAAI,IAAI,GAAG,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,uCAAU,GAAV,UAAW,GAAQ;QACjB,IAAI,IAAI,GAAG,CAAC,cAAc,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAxCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE,CAAC,yCAAyC,CAAC;YACtD,WAAW,EAAE,0CAA0C;YACvD,UAAU,EAAE,CAAC,yBAAkB,EAAE,6BAAoB,EAAE,aAAM,CAAC;YAC9D,SAAS,EAAE,CAAC,qBAAc;gBACxB,wBAAU,CAAC;SACd,CAAC;;0BAAA;IAmCF,yBAAC;AAAD,CAAC,AAlCD,IAkCC;AAlCY,0BAAkB,qBAkC9B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router-deprecated';\n\nimport { Log } from '../log/log';\nimport { LogService } from '../log.service/log.service';\n\n// material directives\nimport {MD_CARD_DIRECTIVES} from '@angular2-material/card';\nimport { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';\nimport {MdIcon, MdIconRegistry} from '@angular2-material/icon';\n\n\n@Component({\n  selector: 'my-dashboard',\n  styleUrls: ['./app/dashboard/dashboard.component.css'],\n  templateUrl: './app/dashboard/dashboard.component.html',\n  directives: [MD_CARD_DIRECTIVES, MD_BUTTON_DIRECTIVES, MdIcon],\n  providers: [MdIconRegistry,\n    LogService]\n})\nexport class DashboardComponent implements OnInit {\n  logs: Log[] = [];\n  filteredLogs: Log[] = [];\n  constructor(private router: Router, private logService: LogService) { }\n  hasIssue(log: Log) {\n    return log.priority > -1;\n  }\n  comparePriority(a, b) {\n    if (a.priority > b.priority)\n      return -1;\n    if (a.priority < b.priority)\n      return 1;\n    return 0;\n  }\n\n  ngOnInit() {\n    this.logService.getLogs()\n      .then(logs => {\n        this.filteredLogs = logs.filter(this.hasIssue);\n        for (var log of this.filteredLogs) {\n          this.logs.push(new Log(log));\n        }\n        this.logs.sort(this.comparePriority);\n      });\n  }\n  goToDetail(log: Log) {\n    let link = ['LogDetail', { id: log.id }];\n    this.router.navigate(link);\n  }\n  goToNotify(log: Log) {\n    let link = ['LogMessaging', { id: log.id }];\n    this.router.navigate(link);\n  }\n\n}\n"]}